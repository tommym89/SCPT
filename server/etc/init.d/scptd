#!/bin/bash
#
# scptd		Start up the scpt server daemon
#
# chkconfig: 2345 55 25
# description: SCPT is a protocol for multi-threaded secure file transfer. \
#              This service starts up the scpt server daemon.
#
# processname: scptd
# config: /etc/scptd.conf
# pidfile: /var/run/scptd.pid

### BEGIN INIT INFO
# Provides: scptd
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the scpt server daemon
# Description:       SCPT is a protocol for multi-threaded secure file transfer.
#		     This service starts up the scpt server daemon.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

# pull in sysconfig settings
[ -f /etc/scptd.conf ] && . /etc/scptd.conf

RETVAL=0
prog="scptd"
lockfile=/var/lock/subsys/$prog

# Some functions to make the below more readable
SCPTD=/usr/local/sbin/scptd
PID_FILE=/var/run/scptd.pid

runlevel=$(set -- $(runlevel); eval "echo \$$#" )

do_restart_sanity_check()
{
	RETVAL=`cat ${PID_FILE}`
	if [ $RETVAL -eq  0 ]; then
		failure $"Configuration file or keys are invalid"
		echo
	fi
}

start()
{
	[ -x $SCPTD ] || exit 5

	echo -n $"Starting $prog: "
	DEBUG=${DEBUG} CONTROL_SECRET=${CONTROL_SECRET} PORT=${PORT} $SCPTD >>/var/log/scptd.log 2>&1 &
	PID=$!
	test ${PID} -gt 0 && success || failure
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
		touch $lockfile
		echo ${PID} > ${PID_FILE}
	fi
	echo
	return $RETVAL
}

stop()
{
	echo -n $"Stopping $prog: "
	killproc -p $PID_FILE $SCPTD
	RETVAL=$?
	# if we are in halt or reboot runlevel kill all running sessions
	# so the TCP connections are closed cleanly
	if [ "x$runlevel" = x0 -o "x$runlevel" = x6 ] ; then
	    trap '' TERM
	    killall $prog 2>/dev/null
	    trap TERM
	else
		echo "${CONTROL_SECRET}" | nc localhost ${PORT}
	fi
	[ $RETVAL -eq 0 ] && rm -f $lockfile
	echo
}

reload()
{
	echo -n $"Reloading $prog: "
	killproc -p $PID_FILE $SCPTD -HUP
	RETVAL=$?
	echo
}

restart() {
	stop
	start
}

force_reload() {
	restart
}

rh_status() {
	status -p $PID_FILE scptd
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

case "$1" in
	start)
		rh_status_q && exit 0
		start
		;;
	stop)
		if ! rh_status_q; then
			rm -f $lockfile
			exit 0
		fi
		stop
		;;
	restart)
		restart
		;;
	reload)
		rh_status_q || exit 7
		reload
		;;
	force-reload)
		force_reload
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		if [ -f $lockfile ] ; then
			do_restart_sanity_check
			if [ $RETVAL -ne 0 ] ; then
				stop
				# avoid race
				sleep 3
				start
			else
				RETVAL=6
			fi
		fi
		;;
	status)
		rh_status
		RETVAL=$?
		if [ $RETVAL -eq 3 -a -f $lockfile ] ; then
			RETVAL=2
		fi
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
		RETVAL=2
esac
exit $RETVAL
